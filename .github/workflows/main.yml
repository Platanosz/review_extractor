---
  name: Build and Push to Lambda review_extractor
  on:
    push:
      branches:
        - release/*
    pull_request:
      branches:
        - release/*
  permissions:
    actions: write
    contents: write
  
  jobs:
    build-and-push:
      name: Build and Push to ECR
      runs-on: ubuntu-latest
      strategy:
        matrix:
          python-version: [ "3.10" ]
      steps:
        - name: Checkout code
          uses: actions/checkout@v3
  
        - name: Automatic Tagging of Releases
          id: generate_tag
          run: |
            #!/bin/bash
            TAG=$(./scripts/git_update.sh -v patch)
            echo "tag=$TAG" >> $GITHUB_ENV
  
        - name: Commit and push changes
          uses: devops-infra/action-commit-push@master
          with:
            github_token: ${{ secrets.GITHUB_TOKEN }}
            commit_message: release-${{ env.tag }}
  
        - name: Configure AWS credentials
          uses: aws-actions/configure-aws-credentials@v1
          with:
            aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
            aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            aws-region: ${{ secrets.AWS_REGION }}
  
        - name: Login to Amazon ECR
          id: login-ecr
          uses: aws-actions/amazon-ecr-login@v1
  
        - name: Package wheel file
          run: make ci-prebuild && make ci
  
        - name: Build Docker image
          run: |
            docker build -t ${{ steps.login-ecr.outputs.registry }}/${{ secrets.ECR_REPOSITORY_NAME }}:${{ env.tag }} .
  
        - name: Push Docker image to Amazon ECR
          run: |
            docker push ${{ steps.login-ecr.outputs.registry }}/${{ secrets.ECR_REPOSITORY_NAME }}:${{ env.tag }}
  
  
        - name: Deploy to Lambda
          env:
            AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
            AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            AWS_REGION: ${{ secrets.AWS_REGION }}
            LAMBDA_FUNCTION_NAME: ${{ secrets.LAMBDA_FUNCTION_NAME }}
            ECR_IMAGE_URI: ${{ steps.login-ecr.outputs.registry }}/${{ secrets.ECR_REPOSITORY_NAME }}:${{ env.tag }}
          run: |
            aws lambda update-function-code \
              --function-name $LAMBDA_FUNCTION_NAME \
              --image-uri $ECR_IMAGE_URI
  